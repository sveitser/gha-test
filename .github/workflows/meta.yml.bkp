# name: Meta

# on:
#   workflow_dispatch:
#   push:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

# jobs:
#   meta:
#     runs-on: ubuntu-latest
#     outputs:
#       tag: ${{ steps.metadata.outputs.tags }}
#     strategy:
#       matrix:
#         service:
#           - foo
#           - bar
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Setup QEMU
#         uses: docker/setup-qemu-action@v3
#         with:
#           # Temporary fix (See https://github.com/docker/setup-qemu-action/issues/198)
#           image: tonistiigi/binfmt:qemu-v7.0.0-28

#       - name: Setup Docker BuildKit (buildx)
#         uses: docker/setup-buildx-action@v3

#       - name: Login to Github Container Repo
#         uses: docker/login-action@v3
#         if: github.event_name != 'pull_request'
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Generate docker metadata
#         uses: docker/metadata-action@v5
#         id: metadata
#         with:
#           images: ghcr.io/sveitser/test-gha/service

#       # - name: Build and push ${{ matrix.service }} docker image
#       #   uses: docker/build-push-action@v6
#       #   with:
#       #     context: .
#       #     file: ./Dockerfile
#       #     platforms: linux/amd64,linux/arm64
#       #     tags: ${{ steps.metadata.outputs.tags }}
#       #     labels: ${{ steps.metadata.outputs.labels  }}
#       #     # always export to file for testing in test-demo
#       #     outputs: |
#       #       type=image,dest=${{ runner.temp }}/service.tar

#       # - name: check files
#       #   run: |
#       #     find ${{ runner.temp }}

#       # - name: Upload artifact
#       #   uses: actions/upload-artifact@v4
#       #   with:
#       #     name: service-docker-image
#       #     path: ${{ runner.temp }}/service.tar
#       #     if-no-files-found: error

#   load-docker:
#     runs-on: ubuntu-latest
#     needs: [meta]
#     steps:
#       - name: check outputs
#         run: |
#           echo ${{ needs.meta.outputs.tag }}

#       # - name: Download artifacts
#       #   uses: actions/download-artifact@v4
#       #   with:
#       #     path: ${{ runner.temp }}/docker-images
#       #     pattern: "*-docker-image"


#       # - name: Load docker images
#       #   run: |
#       #     # load all *.tar files in the temp directory, the layout should
#       #     # be ${{ runner.temp }}/docker-images/<artifact-name>/<service>.tar
#       #     find ${{ runner.temp }}/docker-images

#       #     for file in $(find ${{ runner.temp }}/docker-images -name "*.tar"); do
#       #       echo "Loading $file"
#       #       docker load --input $file
#       #     done

#       #     docker images
