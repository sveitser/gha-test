name: multiarch

on:
  workflow_dispatch:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  docker_build:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            runs-on: ubuntu-latest
            service: foo
            image: ghcr.io/sveitser/gha-test/foo
          - platform: linux/arm64
            runs-on: ubuntu-latest
            service: foo
            image: ghcr.io/sveitser/gha-test/foo

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # TODO, remove once we have native arm runner
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to Github Container Repo
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Generate docker metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ matrix.image }}

      - name: Build docker image and export to file (PR)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.service }}.Dockerfile
          labels: ${{ steps.metadata.outputs.labels  }}
          tags: ${{ steps.metadata.outputs.tags }}
          platforms: ${{ matrix.platform }}
          outputs: type=docker,dest=${{ runner.temp }}/${{ matrix.service }}.tar

      - name: Upload artifact (PR only)
        if: github.event_name == 'pull_request' && matrix.platform == 'linux/amd64'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-docker-image
          path: ${{ runner.temp }}/${{ matrix.service }}.tar
          if-no-files-found: error

      - name: Build and push docker (non-PR)
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          file: ${{ matrix.service }}.Dockerfile
          labels: ${{ steps.metadata.outputs.labels  }}
          # Note: the final multiarch image will receive the tag
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ matrix.image }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        if: github.event_name != 'pull_request'
        shell: bash
        run: |
          set -x
          digest_dir="${{ runner.temp }}/digests"
          mkdir -p "${digest_dir}"
          digest="${{ steps.build.outputs.digest }}"
          touch "${digest_dir}/${digest#sha256:}"
          ls -lah "${digest_dir}"

      - name: Upload digest to arm64
        if: matrix.platform == 'linux/arm64' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: "digests-arm64"
          path: "${{ runner.temp }}/digests/*"
          if-no-files-found: error
          retention-days: 1

      - name: Upload digest to amd64
        if: matrix.platform == 'linux/amd64' && github.event_name != 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: "digests-amd64"
          path: "${{ runner.temp }}/digests/*"
          if-no-files-found: error
          retention-days: 1

  # Merge the AMD64 and ARM64 images into the final (multiplatform) image.
  #
  # For documentation refer to
  # https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
  merge_into_multiplatform_images:
    if: github.event_name != 'pull_request'
    needs:
      - docker_build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/sveitser/gha-test/foo

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Repo
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: "digests-*"
          path: "${{ runner.temp }}/digests"
          merge-multiple: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Create manifest list and push
        working-directory: "${{ runner.temp }}/digests"
        run: |
          # Count the number of files in the directory
          file_count=$(find . -type f | wc -l)

          if [ "$file_count" -ne 2 ]; then
            echo "Should have exactly 2 digests to combine, something went wrong"
            ls -lah
            exit 1
          fi

          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ matrix.image }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ matrix.image }}:${{ steps.meta.outputs.version }}
